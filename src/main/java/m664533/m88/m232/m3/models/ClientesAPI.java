/*
 * GeoventasAndroidAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package m664533.m88.m232.m3.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.util.List;
import m664533.m88.m232.m3.internal.OptionalNullable;

/**
 * This is a model class for ClientesAPI type.
 */
public class ClientesAPI {
    private Integer id;
    private OptionalNullable<String> codigo;
    private OptionalNullable<String> razonSocial;
    private OptionalNullable<String> nombreComercial;
    private OptionalNullable<String> direccion;
    private OptionalNullable<String> ruc;
    private OptionalNullable<String> telefono;
    private Double latitud;
    private Double longitud;
    private DiaEnum diaVisita;
    private OptionalNullable<String> email;
    private JerarquiaPrincipal jerarquiaPrincipal;
    private OptionalNullable<List<Credito>> credito;
    private OptionalNullable<List<Cartera>> cartera;

    /**
     * Default constructor.
     */
    public ClientesAPI() {
    }

    /**
     * Initialization constructor.
     * @param  id  Integer value for id.
     * @param  codigo  String value for codigo.
     * @param  razonSocial  String value for razonSocial.
     * @param  nombreComercial  String value for nombreComercial.
     * @param  direccion  String value for direccion.
     * @param  ruc  String value for ruc.
     * @param  telefono  String value for telefono.
     * @param  latitud  Double value for latitud.
     * @param  longitud  Double value for longitud.
     * @param  diaVisita  DiaEnum value for diaVisita.
     * @param  email  String value for email.
     * @param  jerarquiaPrincipal  JerarquiaPrincipal value for jerarquiaPrincipal.
     * @param  credito  List of Credito value for credito.
     * @param  cartera  List of Cartera value for cartera.
     */
    public ClientesAPI(
            Integer id,
            String codigo,
            String razonSocial,
            String nombreComercial,
            String direccion,
            String ruc,
            String telefono,
            Double latitud,
            Double longitud,
            DiaEnum diaVisita,
            String email,
            JerarquiaPrincipal jerarquiaPrincipal,
            List<Credito> credito,
            List<Cartera> cartera) {
        this.id = id;
        this.codigo = OptionalNullable.of(codigo);
        this.razonSocial = OptionalNullable.of(razonSocial);
        this.nombreComercial = OptionalNullable.of(nombreComercial);
        this.direccion = OptionalNullable.of(direccion);
        this.ruc = OptionalNullable.of(ruc);
        this.telefono = OptionalNullable.of(telefono);
        this.latitud = latitud;
        this.longitud = longitud;
        this.diaVisita = diaVisita;
        this.email = OptionalNullable.of(email);
        this.jerarquiaPrincipal = jerarquiaPrincipal;
        this.credito = OptionalNullable.of(credito);
        this.cartera = OptionalNullable.of(cartera);
    }

    /**
     * Internal initialization constructor.
     */
    protected ClientesAPI(Integer id, OptionalNullable<String> codigo,
            OptionalNullable<String> razonSocial, OptionalNullable<String> nombreComercial,
            OptionalNullable<String> direccion, OptionalNullable<String> ruc,
            OptionalNullable<String> telefono, Double latitud, Double longitud, DiaEnum diaVisita,
            OptionalNullable<String> email, JerarquiaPrincipal jerarquiaPrincipal,
            OptionalNullable<List<Credito>> credito, OptionalNullable<List<Cartera>> cartera) {
        this.id = id;
        this.codigo = codigo;
        this.razonSocial = razonSocial;
        this.nombreComercial = nombreComercial;
        this.direccion = direccion;
        this.ruc = ruc;
        this.telefono = telefono;
        this.latitud = latitud;
        this.longitud = longitud;
        this.diaVisita = diaVisita;
        this.email = email;
        this.jerarquiaPrincipal = jerarquiaPrincipal;
        this.credito = credito;
        this.cartera = cartera;
    }

    /**
     * Getter for Id.
     * @return Returns the Integer
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for Integer
     */
    @JsonSetter("id")
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Internal Getter for Codigo.
     * @return Returns the Internal String
     */
    @JsonGetter("codigo")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCodigo() {
        return this.codigo;
    }

    /**
     * Getter for Codigo.
     * @return Returns the String
     */
    public String getCodigo() {
        return OptionalNullable.getFrom(codigo);
    }

    /**
     * Setter for Codigo.
     * @param codigo Value for String
     */
    @JsonSetter("codigo")
    public void setCodigo(String codigo) {
        this.codigo = OptionalNullable.of(codigo);
    }

    /**
     * UnSetter for Codigo.
     */
    public void unsetCodigo() {
        codigo = null;
    }

    /**
     * Internal Getter for RazonSocial.
     * @return Returns the Internal String
     */
    @JsonGetter("razonSocial")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetRazonSocial() {
        return this.razonSocial;
    }

    /**
     * Getter for RazonSocial.
     * @return Returns the String
     */
    public String getRazonSocial() {
        return OptionalNullable.getFrom(razonSocial);
    }

    /**
     * Setter for RazonSocial.
     * @param razonSocial Value for String
     */
    @JsonSetter("razonSocial")
    public void setRazonSocial(String razonSocial) {
        this.razonSocial = OptionalNullable.of(razonSocial);
    }

    /**
     * UnSetter for RazonSocial.
     */
    public void unsetRazonSocial() {
        razonSocial = null;
    }

    /**
     * Internal Getter for NombreComercial.
     * @return Returns the Internal String
     */
    @JsonGetter("nombreComercial")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetNombreComercial() {
        return this.nombreComercial;
    }

    /**
     * Getter for NombreComercial.
     * @return Returns the String
     */
    public String getNombreComercial() {
        return OptionalNullable.getFrom(nombreComercial);
    }

    /**
     * Setter for NombreComercial.
     * @param nombreComercial Value for String
     */
    @JsonSetter("nombreComercial")
    public void setNombreComercial(String nombreComercial) {
        this.nombreComercial = OptionalNullable.of(nombreComercial);
    }

    /**
     * UnSetter for NombreComercial.
     */
    public void unsetNombreComercial() {
        nombreComercial = null;
    }

    /**
     * Internal Getter for Direccion.
     * @return Returns the Internal String
     */
    @JsonGetter("direccion")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDireccion() {
        return this.direccion;
    }

    /**
     * Getter for Direccion.
     * @return Returns the String
     */
    public String getDireccion() {
        return OptionalNullable.getFrom(direccion);
    }

    /**
     * Setter for Direccion.
     * @param direccion Value for String
     */
    @JsonSetter("direccion")
    public void setDireccion(String direccion) {
        this.direccion = OptionalNullable.of(direccion);
    }

    /**
     * UnSetter for Direccion.
     */
    public void unsetDireccion() {
        direccion = null;
    }

    /**
     * Internal Getter for Ruc.
     * @return Returns the Internal String
     */
    @JsonGetter("ruc")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetRuc() {
        return this.ruc;
    }

    /**
     * Getter for Ruc.
     * @return Returns the String
     */
    public String getRuc() {
        return OptionalNullable.getFrom(ruc);
    }

    /**
     * Setter for Ruc.
     * @param ruc Value for String
     */
    @JsonSetter("ruc")
    public void setRuc(String ruc) {
        this.ruc = OptionalNullable.of(ruc);
    }

    /**
     * UnSetter for Ruc.
     */
    public void unsetRuc() {
        ruc = null;
    }

    /**
     * Internal Getter for Telefono.
     * @return Returns the Internal String
     */
    @JsonGetter("telefono")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetTelefono() {
        return this.telefono;
    }

    /**
     * Getter for Telefono.
     * @return Returns the String
     */
    public String getTelefono() {
        return OptionalNullable.getFrom(telefono);
    }

    /**
     * Setter for Telefono.
     * @param telefono Value for String
     */
    @JsonSetter("telefono")
    public void setTelefono(String telefono) {
        this.telefono = OptionalNullable.of(telefono);
    }

    /**
     * UnSetter for Telefono.
     */
    public void unsetTelefono() {
        telefono = null;
    }

    /**
     * Getter for Latitud.
     * @return Returns the Double
     */
    @JsonGetter("latitud")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getLatitud() {
        return latitud;
    }

    /**
     * Setter for Latitud.
     * @param latitud Value for Double
     */
    @JsonSetter("latitud")
    public void setLatitud(Double latitud) {
        this.latitud = latitud;
    }

    /**
     * Getter for Longitud.
     * @return Returns the Double
     */
    @JsonGetter("longitud")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getLongitud() {
        return longitud;
    }

    /**
     * Setter for Longitud.
     * @param longitud Value for Double
     */
    @JsonSetter("longitud")
    public void setLongitud(Double longitud) {
        this.longitud = longitud;
    }

    /**
     * Getter for DiaVisita.
     * @return Returns the DiaEnum
     */
    @JsonGetter("diaVisita")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DiaEnum getDiaVisita() {
        return diaVisita;
    }

    /**
     * Setter for DiaVisita.
     * @param diaVisita Value for DiaEnum
     */
    @JsonSetter("diaVisita")
    public void setDiaVisita(DiaEnum diaVisita) {
        this.diaVisita = diaVisita;
    }

    /**
     * Internal Getter for Email.
     * @return Returns the Internal String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetEmail() {
        return this.email;
    }

    /**
     * Getter for Email.
     * @return Returns the String
     */
    public String getEmail() {
        return OptionalNullable.getFrom(email);
    }

    /**
     * Setter for Email.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = OptionalNullable.of(email);
    }

    /**
     * UnSetter for Email.
     */
    public void unsetEmail() {
        email = null;
    }

    /**
     * Getter for JerarquiaPrincipal.
     * @return Returns the JerarquiaPrincipal
     */
    @JsonGetter("jerarquiaPrincipal")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public JerarquiaPrincipal getJerarquiaPrincipal() {
        return jerarquiaPrincipal;
    }

    /**
     * Setter for JerarquiaPrincipal.
     * @param jerarquiaPrincipal Value for JerarquiaPrincipal
     */
    @JsonSetter("jerarquiaPrincipal")
    public void setJerarquiaPrincipal(JerarquiaPrincipal jerarquiaPrincipal) {
        this.jerarquiaPrincipal = jerarquiaPrincipal;
    }

    /**
     * Internal Getter for Credito.
     * @return Returns the Internal List of Credito
     */
    @JsonGetter("credito")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<Credito>> internalGetCredito() {
        return this.credito;
    }

    /**
     * Getter for Credito.
     * @return Returns the List of Credito
     */
    public List<Credito> getCredito() {
        return OptionalNullable.getFrom(credito);
    }

    /**
     * Setter for Credito.
     * @param credito Value for List of Credito
     */
    @JsonSetter("credito")
    public void setCredito(List<Credito> credito) {
        this.credito = OptionalNullable.of(credito);
    }

    /**
     * UnSetter for Credito.
     */
    public void unsetCredito() {
        credito = null;
    }

    /**
     * Internal Getter for Cartera.
     * @return Returns the Internal List of Cartera
     */
    @JsonGetter("cartera")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<Cartera>> internalGetCartera() {
        return this.cartera;
    }

    /**
     * Getter for Cartera.
     * @return Returns the List of Cartera
     */
    public List<Cartera> getCartera() {
        return OptionalNullable.getFrom(cartera);
    }

    /**
     * Setter for Cartera.
     * @param cartera Value for List of Cartera
     */
    @JsonSetter("cartera")
    public void setCartera(List<Cartera> cartera) {
        this.cartera = OptionalNullable.of(cartera);
    }

    /**
     * UnSetter for Cartera.
     */
    public void unsetCartera() {
        cartera = null;
    }

    /**
     * Converts this ClientesAPI into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ClientesAPI [" + "id=" + id + ", codigo=" + codigo + ", razonSocial=" + razonSocial
                + ", nombreComercial=" + nombreComercial + ", direccion=" + direccion + ", ruc="
                + ruc + ", telefono=" + telefono + ", latitud=" + latitud + ", longitud=" + longitud
                + ", diaVisita=" + diaVisita + ", email=" + email + ", jerarquiaPrincipal="
                + jerarquiaPrincipal + ", credito=" + credito + ", cartera=" + cartera + "]";
    }

    /**
     * Builds a new {@link ClientesAPI.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ClientesAPI.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .latitud(getLatitud())
                .longitud(getLongitud())
                .diaVisita(getDiaVisita())
                .jerarquiaPrincipal(getJerarquiaPrincipal());
        builder.codigo = internalGetCodigo();
        builder.razonSocial = internalGetRazonSocial();
        builder.nombreComercial = internalGetNombreComercial();
        builder.direccion = internalGetDireccion();
        builder.ruc = internalGetRuc();
        builder.telefono = internalGetTelefono();
        builder.email = internalGetEmail();
        builder.credito = internalGetCredito();
        builder.cartera = internalGetCartera();
        return builder;
    }

    /**
     * Class to build instances of {@link ClientesAPI}.
     */
    public static class Builder {
        private Integer id;
        private OptionalNullable<String> codigo;
        private OptionalNullable<String> razonSocial;
        private OptionalNullable<String> nombreComercial;
        private OptionalNullable<String> direccion;
        private OptionalNullable<String> ruc;
        private OptionalNullable<String> telefono;
        private Double latitud;
        private Double longitud;
        private DiaEnum diaVisita;
        private OptionalNullable<String> email;
        private JerarquiaPrincipal jerarquiaPrincipal;
        private OptionalNullable<List<Credito>> credito;
        private OptionalNullable<List<Cartera>> cartera;



        /**
         * Setter for id.
         * @param  id  Integer value for id.
         * @return Builder
         */
        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for codigo.
         * @param  codigo  String value for codigo.
         * @return Builder
         */
        public Builder codigo(String codigo) {
            this.codigo = OptionalNullable.of(codigo);
            return this;
        }

        /**
         * UnSetter for codigo.
         * @return Builder
         */
        public Builder unsetCodigo() {
            codigo = null;
            return this;
        }

        /**
         * Setter for razonSocial.
         * @param  razonSocial  String value for razonSocial.
         * @return Builder
         */
        public Builder razonSocial(String razonSocial) {
            this.razonSocial = OptionalNullable.of(razonSocial);
            return this;
        }

        /**
         * UnSetter for razonSocial.
         * @return Builder
         */
        public Builder unsetRazonSocial() {
            razonSocial = null;
            return this;
        }

        /**
         * Setter for nombreComercial.
         * @param  nombreComercial  String value for nombreComercial.
         * @return Builder
         */
        public Builder nombreComercial(String nombreComercial) {
            this.nombreComercial = OptionalNullable.of(nombreComercial);
            return this;
        }

        /**
         * UnSetter for nombreComercial.
         * @return Builder
         */
        public Builder unsetNombreComercial() {
            nombreComercial = null;
            return this;
        }

        /**
         * Setter for direccion.
         * @param  direccion  String value for direccion.
         * @return Builder
         */
        public Builder direccion(String direccion) {
            this.direccion = OptionalNullable.of(direccion);
            return this;
        }

        /**
         * UnSetter for direccion.
         * @return Builder
         */
        public Builder unsetDireccion() {
            direccion = null;
            return this;
        }

        /**
         * Setter for ruc.
         * @param  ruc  String value for ruc.
         * @return Builder
         */
        public Builder ruc(String ruc) {
            this.ruc = OptionalNullable.of(ruc);
            return this;
        }

        /**
         * UnSetter for ruc.
         * @return Builder
         */
        public Builder unsetRuc() {
            ruc = null;
            return this;
        }

        /**
         * Setter for telefono.
         * @param  telefono  String value for telefono.
         * @return Builder
         */
        public Builder telefono(String telefono) {
            this.telefono = OptionalNullable.of(telefono);
            return this;
        }

        /**
         * UnSetter for telefono.
         * @return Builder
         */
        public Builder unsetTelefono() {
            telefono = null;
            return this;
        }

        /**
         * Setter for latitud.
         * @param  latitud  Double value for latitud.
         * @return Builder
         */
        public Builder latitud(Double latitud) {
            this.latitud = latitud;
            return this;
        }

        /**
         * Setter for longitud.
         * @param  longitud  Double value for longitud.
         * @return Builder
         */
        public Builder longitud(Double longitud) {
            this.longitud = longitud;
            return this;
        }

        /**
         * Setter for diaVisita.
         * @param  diaVisita  DiaEnum value for diaVisita.
         * @return Builder
         */
        public Builder diaVisita(DiaEnum diaVisita) {
            this.diaVisita = diaVisita;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = OptionalNullable.of(email);
            return this;
        }

        /**
         * UnSetter for email.
         * @return Builder
         */
        public Builder unsetEmail() {
            email = null;
            return this;
        }

        /**
         * Setter for jerarquiaPrincipal.
         * @param  jerarquiaPrincipal  JerarquiaPrincipal value for jerarquiaPrincipal.
         * @return Builder
         */
        public Builder jerarquiaPrincipal(JerarquiaPrincipal jerarquiaPrincipal) {
            this.jerarquiaPrincipal = jerarquiaPrincipal;
            return this;
        }

        /**
         * Setter for credito.
         * @param  credito  List of Credito value for credito.
         * @return Builder
         */
        public Builder credito(List<Credito> credito) {
            this.credito = OptionalNullable.of(credito);
            return this;
        }

        /**
         * UnSetter for credito.
         * @return Builder
         */
        public Builder unsetCredito() {
            credito = null;
            return this;
        }

        /**
         * Setter for cartera.
         * @param  cartera  List of Cartera value for cartera.
         * @return Builder
         */
        public Builder cartera(List<Cartera> cartera) {
            this.cartera = OptionalNullable.of(cartera);
            return this;
        }

        /**
         * UnSetter for cartera.
         * @return Builder
         */
        public Builder unsetCartera() {
            cartera = null;
            return this;
        }

        /**
         * Builds a new {@link ClientesAPI} object using the set fields.
         * @return {@link ClientesAPI}
         */
        public ClientesAPI build() {
            return new ClientesAPI(id, codigo, razonSocial, nombreComercial, direccion, ruc,
                    telefono, latitud, longitud, diaVisita, email, jerarquiaPrincipal, credito,
                    cartera);
        }
    }
}
