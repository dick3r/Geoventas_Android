/*
 * GeoventasAndroidAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package m664533.m88.m232.m3.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import m664533.m88.m232.m3.DateTimeHelper;
import m664533.m88.m232.m3.internal.OptionalNullable;

/**
 * This is a model class for Cartera type.
 */
public class Cartera {
    private Integer id;
    private OptionalNullable<String> factura;
    private LocalDateTime fecha;
    private Double valor;
    private Boolean vencida;

    /**
     * Default constructor.
     */
    public Cartera() {
    }

    /**
     * Initialization constructor.
     * @param  id  Integer value for id.
     * @param  factura  String value for factura.
     * @param  fecha  LocalDateTime value for fecha.
     * @param  valor  Double value for valor.
     * @param  vencida  Boolean value for vencida.
     */
    public Cartera(
            Integer id,
            String factura,
            LocalDateTime fecha,
            Double valor,
            Boolean vencida) {
        this.id = id;
        this.factura = OptionalNullable.of(factura);
        this.fecha = fecha;
        this.valor = valor;
        this.vencida = vencida;
    }

    /**
     * Internal initialization constructor.
     */
    protected Cartera(Integer id, OptionalNullable<String> factura, LocalDateTime fecha,
            Double valor, Boolean vencida) {
        this.id = id;
        this.factura = factura;
        this.fecha = fecha;
        this.valor = valor;
        this.vencida = vencida;
    }

    /**
     * Getter for Id.
     * @return Returns the Integer
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for Integer
     */
    @JsonSetter("id")
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Internal Getter for Factura.
     * @return Returns the Internal String
     */
    @JsonGetter("factura")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFactura() {
        return this.factura;
    }

    /**
     * Getter for Factura.
     * @return Returns the String
     */
    public String getFactura() {
        return OptionalNullable.getFrom(factura);
    }

    /**
     * Setter for Factura.
     * @param factura Value for String
     */
    @JsonSetter("factura")
    public void setFactura(String factura) {
        this.factura = OptionalNullable.of(factura);
    }

    /**
     * UnSetter for Factura.
     */
    public void unsetFactura() {
        factura = null;
    }

    /**
     * Getter for Fecha.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("fecha")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getFecha() {
        return fecha;
    }

    /**
     * Setter for Fecha.
     * @param fecha Value for LocalDateTime
     */
    @JsonSetter("fecha")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setFecha(LocalDateTime fecha) {
        this.fecha = fecha;
    }

    /**
     * Getter for Valor.
     * @return Returns the Double
     */
    @JsonGetter("valor")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getValor() {
        return valor;
    }

    /**
     * Setter for Valor.
     * @param valor Value for Double
     */
    @JsonSetter("valor")
    public void setValor(Double valor) {
        this.valor = valor;
    }

    /**
     * Getter for Vencida.
     * @return Returns the Boolean
     */
    @JsonGetter("vencida")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getVencida() {
        return vencida;
    }

    /**
     * Setter for Vencida.
     * @param vencida Value for Boolean
     */
    @JsonSetter("vencida")
    public void setVencida(Boolean vencida) {
        this.vencida = vencida;
    }

    /**
     * Converts this Cartera into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Cartera [" + "id=" + id + ", factura=" + factura + ", fecha=" + fecha + ", valor="
                + valor + ", vencida=" + vencida + "]";
    }

    /**
     * Builds a new {@link Cartera.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Cartera.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .fecha(getFecha())
                .valor(getValor())
                .vencida(getVencida());
        builder.factura = internalGetFactura();
        return builder;
    }

    /**
     * Class to build instances of {@link Cartera}.
     */
    public static class Builder {
        private Integer id;
        private OptionalNullable<String> factura;
        private LocalDateTime fecha;
        private Double valor;
        private Boolean vencida;



        /**
         * Setter for id.
         * @param  id  Integer value for id.
         * @return Builder
         */
        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for factura.
         * @param  factura  String value for factura.
         * @return Builder
         */
        public Builder factura(String factura) {
            this.factura = OptionalNullable.of(factura);
            return this;
        }

        /**
         * UnSetter for factura.
         * @return Builder
         */
        public Builder unsetFactura() {
            factura = null;
            return this;
        }

        /**
         * Setter for fecha.
         * @param  fecha  LocalDateTime value for fecha.
         * @return Builder
         */
        public Builder fecha(LocalDateTime fecha) {
            this.fecha = fecha;
            return this;
        }

        /**
         * Setter for valor.
         * @param  valor  Double value for valor.
         * @return Builder
         */
        public Builder valor(Double valor) {
            this.valor = valor;
            return this;
        }

        /**
         * Setter for vencida.
         * @param  vencida  Boolean value for vencida.
         * @return Builder
         */
        public Builder vencida(Boolean vencida) {
            this.vencida = vencida;
            return this;
        }

        /**
         * Builds a new {@link Cartera} object using the set fields.
         * @return {@link Cartera}
         */
        public Cartera build() {
            return new Cartera(id, factura, fecha, valor, vencida);
        }
    }
}
